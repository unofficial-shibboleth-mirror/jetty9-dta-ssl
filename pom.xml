<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>net.shibboleth</groupId>
        <artifactId>parent</artifactId>
        <version>7.11.0-SNAPSHOT</version>
    </parent>

    <groupId>net.shibboleth.utilities.jetty9</groupId>
    <artifactId>jetty9-dta-ssl</artifactId>
    <version>1.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Jetty9 Delegate To Application SSL Connector</name>
    <description>
        This is a simple extension to SslContextFactory that supports
        client cert authentication but delegates all of the trust verification
        of the certificate to the application that received the request.

        PLEASE READ THE ABOVE AGAIN. Use of this plugin with an application that does not
        validate the trustworthiness of a provided client certificate will lead to insecure code.
    </description>

    <properties>
        <svn.relative.location>utilities/jetty9-dta-ssl</svn.relative.location>
    </properties>

    <repositories>
        <repository>
            <id>shib-release</id>
            <url>https://shibboleth.net/nexus/content/groups/public</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>shib-snapshot</id>
            <url>https://shibboleth.net/nexus/content/repositories/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
    </repositories>

    <dependencies>
        <!-- Compile Dependencies -->

        <!-- Provided Dependencies -->
        <dependency>
            <groupId>${jetty.groupId}</groupId>
            <artifactId>jetty-server</artifactId>
            <version>${jetty.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Runtime Dependencies -->

        <!-- Test Dependencies -->

        <!-- Managed Dependencies -->
    </dependencies>

</project>
